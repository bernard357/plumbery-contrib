---

information:
  - "Mantl cluster, with 3 control nodes, 2 edge nodes, 3 Kubernetes worker nodes and 3 generic worker nodes"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: EU6

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: MantlFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: MantlNetwork

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/containers/mantl

defaults:

  domain:
    name: "{{ parameter.domainName }}"
    description: "Demonstration of a Mantl cluster"
    ipv4: auto

  ethernet:
    name: "{{ parameter.networkName }}"
    subnet: 10.0.0.0


  control-node:  # default template for a control node

    description: "#control node #mantl"

    information:
      - "ssh centos@{{ node.public }}"

    appliance: 'CentOS 7'

    cpu: 4
    memory: 4

    disks:
      - "1 50 standard"

    glue:
      - internet icmp 22 80 443 8080

    monitoring: essentials

    cloud-config:

      packages:
        - expect
        - git


  edge-node:  # default template for an edge node

    description: "#edge node #mantl"

    information:
      - "ssh centos@{{ node.public }}"

    appliance: 'CentOS 7'

    cpu: 2
    memory: 2

    disks:
      - "1 50 standard"

    glue:
      - internet icmp 22 443 8080

    monitoring: essentials


  kubeworker-node:  # default template for a kubeworker node

    description: "#kubeworker node #mantl"

    information:
      - "ssh centos@{{ node.public }}"

    appliance: 'CentOS 7'

    cpu: 8
    memory: 8

    disks:
      - "1 50 standard"

    glue:
      - internet icmp 22

    monitoring: essentials


  worker-node:  # default template for a worker node

    description: "#worker node #mantl"

    information:
      - "ssh centos@{{ node.public }}"

    appliance: 'CentOS 7'

    cpu: 8
    memory: 8

    disks:
      - "1 50 standard"

    glue:
      - internet icmp 22

    monitoring: essentials


  cloud-config:  # default settings for all nodes

    hostname: "{{ node.name }}"

    write_files:

      - path: /root/hosts.awk
        content: |
          #!/usr/bin/awk -f
          /^{{ mantl-control-01.public }}/ {next}
          /^{{ mantl-control-01.private }}/ {next}
          /^{{ mantl-control-02.public }}/ {next}
          /^{{ mantl-control-02.private }}/ {next}
          /^{{ mantl-control-03.public }}/ {next}
          /^{{ mantl-control-03.private }}/ {next}
          /^{{ mantl-edge-01.public }}/ {next}
          /^{{ mantl-edge-01.private }}/ {next}
          /^{{ mantl-edge-02.public }}/ {next}
          /^{{ mantl-edge-02.private }}/ {next}
          /^{{ mantl-kubeworker-001.public }}/ {next}
          /^{{ mantl-kubeworker-001.private }}/ {next}
          /^{{ mantl-kubeworker-002.public }}/ {next}
          /^{{ mantl-kubeworker-002.private }}/ {next}
          /^{{ mantl-kubeworker-003.public }}/ {next}
          /^{{ mantl-kubeworker-003.private }}/ {next}
          /^{{ mantl-worker-001.public }}/ {next}
          /^{{ mantl-worker-001.private }}/ {next}
          /^{{ mantl-worker-002.public }}/ {next}
          /^{{ mantl-worker-002.private }}/ {next}
          /^{{ mantl-worker-003.public }}/ {next}
          /^{{ mantl-worker-003.private }}/ {next}
          /^{{ mantl-ansible.public }}/ {next}
          /^{{ mantl-ansible.private }}/ {next}
          {print}
          END {
           print "{{ mantl-control-01.public }}    mantl-control-01"
           print "{{ mantl-control-01.private }}    mantl-control-01"
           print "{{ mantl-control-02.public }}    mantl-control-02"
           print "{{ mantl-control-02.private }}    mantl-control-02"
           print "{{ mantl-control-03.public }}    mantl-control-03"
           print "{{ mantl-control-03.private }}    mantl-control-03"
           print "{{ mantl-edge-01.public }}    mantl-edge-01"
           print "{{ mantl-edge-01.private }}    mantl-edge-01"
           print "{{ mantl-edge-02.public }}    mantl-edge-02"
           print "{{ mantl-edge-02.private }}    mantl-edge-02"
           print "{{ mantl-kubeworker-001.public }}    mantl-kubeworker-001"
           print "{{ mantl-kubeworker-001.private }}    mantl-kubeworker-001"
           print "{{ mantl-kubeworker-002.public }}    mantl-kubeworker-002"
           print "{{ mantl-kubeworker-002.private }}    mantl-kubeworker-002"
           print "{{ mantl-kubeworker-003.public }}    mantl-kubeworker-003"
           print "{{ mantl-kubeworker-003.private }}    mantl-kubeworker-003"
           print "{{ mantl-worker-001.public }}    mantl-worker-001"
           print "{{ mantl-worker-001.private }}    mantl-worker-001"
           print "{{ mantl-worker-002.public }}    mantl-worker-002"
           print "{{ mantl-worker-002.private }}    mantl-worker-002"
           print "{{ mantl-worker-003.public }}    mantl-worker-003"
           print "{{ mantl-worker-003.private }}    mantl-worker-003"
           print "{{ mantl-ansible.public }}    mantl-ansible"
           print "{{ mantl-ansible.private }}    mantl-ansible"
          }

    packages:
      - ntp
      - curl
      - wget
      - unzip

    runcmd:

      - echo "===== Growing LVM with added disk"
      - pvcreate /dev/sdb
      - vgextend centos /dev/sdb
      - lvextend -l +100%FREE /dev/mapper/centos-root
      - xfs_growfs /dev/mapper/centos-root

      - echo "===== Handling centos keys"
      - cp -n /etc/ssh/ssh_host_rsa_key /home/centos/.ssh/id_rsa
      - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/centos/.ssh/id_rsa.pub
      - chown centos:centos /home/centos/.ssh/*

      - echo "===== Handling root keys"
      - cp -n /etc/ssh/ssh_host_rsa_key /root/.ssh/id_rsa
      - cp -n /etc/ssh/ssh_host_rsa_key.pub /root/.ssh/id_rsa.pub
      - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

      - echo "===== Updating /etc/hosts"
      - cp -n /etc/hosts /etc/hosts.original
      - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

    ssh_keys:
      rsa_private: |
        {{ rsa_private.key }}
      rsa_public: "{{ rsa_public.key }}"

    users:
      - default

      - name: centos
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

      - name: root
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

    disable_root: false
    ssh_pwauth: false

polishers:
  - ansible:
      reap: inventory.yaml

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - mantl:

      nodes:

        - mantl-control-0[1..3]:
            default: control-node

        - mantl-edge-0[1..2]:
            default: edge-node

        - mantl-kubeworker-00[1..3]:
            default: kubeworker-node

        - mantl-worker-00[1..3]:
            default: worker-node

        - mantl-ansible:
            default: control-node

            description: "#ansible node #mantl"

            information:
              - "Admin password has been set to: {{ secret.mantl }}"

            cloud-config:

              write_files:

                - path: /root/security-setup
                  permissions: "0700"
                  content: |
                    #!/bin/sh
                    export USER="root"
                    export HOME="/root"
                    /usr/bin/expect <<EOF
                    spawn "/home/centos/mantl/security-setup"
                    expect "Admin Password:"
                    send "{{ secret.mantl }}\r"
                    expect "Confirm:"
                    send "{{ secret.mantl }}\r"
                    expect eof
                    exit
                    EOF

              packages:
                - epel-release
                - python-devel
                - openssl-devel
                - expect
                - git

              runcmd:

                - echo "===== Installing development tools"
                - yum group install -y "Development Tools"

                - echo "===== Installing pip"
                - yum install -y python-pip
                - pip install --upgrade pip
                - pip -V

                - echo "===== Installing plumbery"
                - pip install plumbery
                - plumbery -v

                - echo "===== Installing ansible"
                - pip install ansible markupsafe
                - ansible --version

                - echo "===== Installing Mantl"
                - cd /opt
                - git clone https://github.com/CiscoCloud/mantl
                - cd mantl
                - pip install -r requirements.txt

                - echo "===== Configuring Mantl"
                - sed -i "s|{{ playbook_dir }}/||" sample.yaml

                - echo "===== Creating security certificates"
                - /root/security-setup

                - echo "===== Waiting for all nodes to be available"
                - sleep 3m

                - echo "===== Generating the inventory of nodes"
                - cd /opt/mantl
                - wget -nv https://raw.githubusercontent.com/bernard357/plumbery-contrib/master/fittings/containers/mantl/fittings.yaml
                - MCP_USERNAME="{{ credentials.name }}" MCP_PASSWORD="{{ credentials.password }}" plumbery fittings.yaml ansible

                - echo "===== Checking that all nodes can be reached by ansible"
                - ansible all -i inventory.yaml -m ping

                - echo "===== Upgrading all nodes with ansible"
                - ansible-playbook -i inventory.yaml playbooks/upgrade-packages.yml

                - echo "===== Installing components at all nodes with ansible"
                - ansible-playbook -i inventory.yaml -e @security.yml sample.yml
