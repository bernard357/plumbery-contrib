---

information:
  - "Docker node"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: NA12

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: DockerFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: DockerNetwork

  nodeName:
    information:
      - "the name of the main node to be deployed"
    type: str
    default: docker01

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/containers/docker

defaults:

  # the same network domain is used at various facilities
  #
  domain:
    name: "{{ parameter.domainName }}"
    description: "Docker nodes"
    service: essentials
    ipv4: auto

  # the same ethernet configuration is used at various facilities
  #
  ethernet:
    name: "{{ parameter.networkName }}"
    subnet: 192.168.20.0

  # default settings for a Docker node
  #
  dockerNode:

    description: "#docker #ubuntu"

    information:
      - "ssh ubuntu@{{ node.public }}"
      - "docker info"
      - "docker run hello-world"

    # plenty of compute power
    #
    appliance: 'Ubuntu 14'
    cpu: 32
    memory: 256

    # enough storage space
    #
    disks:
      - 1 100 standard

    # make the node accessible from the Internet
    #
    glue:
      - internet 22

    # allow for monitoring from the global dashboard
    #
    monitoring: essentials

    # contextualise this node
    #
    cloud-config:

      hostname: "{{ node.name }}"

      packages:
        - ntp

      write_files:

        - path: /root/hosts.awk
          content: |
            #!/usr/bin/awk -f
            /^{{ node.private }}/ {next}
            /^{{ node.ipv6 }}/ {next}
            {print}
            END {
             print "{{ node.private }}    {{ node.name }}"
             print "{{ node.ipv6 }}    {{ node.name }}"
            }

      runcmd:

        - echo "===== Growing LVM with added disk"
        - pvcreate /dev/sdb
        - vgextend rootvol00 /dev/sdb
        - lvextend -l +100%FREE /dev/mapper/rootvol00-rootlvol00
        - resize2fs /dev/mapper/rootvol00-rootlvol00

        - echo "===== Handling ubuntu identity"
        - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
        - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
        - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
        - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

        - echo "===== Updating /etc/hosts"
        - cp -n /etc/hosts /etc/hosts.original
        - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

        - echo "===== Installing Docker Engine"
        - apt-get remove apache2 -y
        - apt-get autoremove -y
        - curl -sSL https://get.docker.com/ | sh
        - usermod -aG docker ubuntu

  cloud-config:

    ssh_keys:
      rsa_private: |
        {{ rsa_private.key }}
      rsa_public: "{{ rsa_public.key }}"

    users:
      - default

      - name: ubuntu
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

    disable_root: false
    ssh_pwauth: false

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - docker:
      nodes:
        - "{{ parameter.nodeName }}":
            default: dockerNode
