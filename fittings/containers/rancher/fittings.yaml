---

information:
  - "Rancher, a complete platform for running containers"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: EU7

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: RancherFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: RancherNetwork

  cpuPerNode:
    information:
      - "the quantity of CPU given to server"
    type: [4..32]
    default: 4

  memoryPerNode:
    information:
      - "the quantity of memory to assign to each Rancher node"
    type: str
    default: 16

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/containers/rancher
  credit: http://docs.rancher.com/rancher/latest/en/quick-start-guide/

defaults:

  domain:
    name: "{{ parameter.domainName }}"
    service: essentials
    ipv4: auto

  ethernet:
    name: "{{ parameter.networkName }}"
    subnet: 192.168.20.0

  rancher-node:

    # enough compute power
    #
    appliance: 'Ubuntu 14'
    cpu: "{{ parameter.cpuPerNode }}"
    memory: "{{ parameter.memoryPerNode }}"

    # enough storage space
    #
    disks:
      - 1 100 standard

    # make the node accessible from the Internet
    #
    glue:
      - internet icmp 22 80 4040 8080 udp:500 udp:4500

    # allow for monitoring from the global dashboard
    #
    monitoring: essentials

    # contextualise this node
    #
    cloud-config:

      hostname: "{{ node.name }}"

      packages:
        - ntp

      write_files:

        - path: /root/hosts.awk
          content: |
            #!/usr/bin/awk -f
            /^{{ node.private }}/ {next}
            /^{{ node.ipv6 }}/ {next}
            {print}
            END {
             print "{{ node.private }}    {{ node.name }}"
             print "{{ node.ipv6 }}    {{ node.name }}"
            }

        - path: /etc/profile.d/mcp.sh
          permissions: "0755"
          content: |
            #!/bin/sh
            export MCP_USER="{{ environment.MCP_USER }}"
            export MCP_PASSWORD="{{ environment.MCP_PASSWORD }}"
            export MCP_SSH_BOOTSTRAP_PASSWORD="{{ environment.MCP_SSH_BOOTSTRAP_PASSWORD }}"

      runcmd:

        - echo "===== Growing LVM with added disk"
        - pvcreate /dev/sdb
        - vgextend rootvol00 /dev/sdb
        - lvextend -l +100%FREE /dev/mapper/rootvol00-rootlvol00
        - resize2fs /dev/mapper/rootvol00-rootlvol00

        - echo "===== Updating /etc/hosts"
        - cp -n /etc/hosts /etc/hosts.original
        - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts

        - echo "===== Handling ubuntu identity"
        - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
        - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
        - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
        - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

        - echo "===== Installing Docker Engine"
        - apt-get remove apache2 -y
        - apt-get autoremove -y
        - curl -sSL https://get.docker.com/ | sh
        - usermod -aG docker ubuntu

        - echo "===== Checking Docker installation"
        - docker run hello-world

  cloud-config:

    ssh_keys:
      rsa_private: |
        {{ rsa_private.key }}
      rsa_public: "{{ rsa_public.key }}"

    users:
      - default

      - name: ubuntu
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

      - name: root
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

    disable_root: false
    ssh_pwauth: false

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - rancher:
      nodes:
        - rancher-01:
            default: rancher-node

            description: "rancher web console"

            information:
              - "go to the rancher web UI:"
              - "http://{{ node.public }}:8080"
              - "get some insight if needed:"
              - "ssh ubuntu@{{ node.public }}"

            cloud-config:

              runcmd:

                - echo "===== Installing Docker Machine"
                - curl -L https://github.com/docker/machine/releases/download/v0.9.0-rc1/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine
                - chmod +x /usr/local/bin/docker-machine

                - echo "===== Checking Docker Machine installation"
                - docker-machine version

                - echo "===== Adding Docker Machine driver for MCP"
                - cd /root
                - wget -nv https://github.com/DimensionDataResearch/docker-machine-driver-ddcloud/releases/download/v0.8/linux-amd64.zip
                - unzip linux-amd64.zip
                - rm -f linux-amd64.zip
                - mv /root/_bin/linux-amd64/docker-machine-driver-ddcloud /usr/local/bin/
                - rm -R _bin

                - echo "===== Adding Rancher"
                - docker run -d --restart=always -p 8080:8080 rancher/server
                - docker pull rancher/agent

        - rancher-0[2..3]:
            default: rancher-node

            description: "rancher cattle"

            information:
              - "ssh ubuntu@{{ node.public }}"


