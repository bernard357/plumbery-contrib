---

information:
  - "Debian network installation with iPXE and DNSMASQ (experimental)"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: NA12

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: DebianFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: DebianNetwork

  networkSubnet:
    information:
      - "the private subnet to be deployed"
    type: str
    default: 192.168.20.0

  networkGateway:
    information:
      - "the router address to be used (DHCP)"
    type: str
    default: 192.168.20.1

  networkRange:
    information:
      - "the range of addresses that are managed dynamically (DHCP)"
    type: str
    default: 192.168.20.50,192.168.20.100

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/example/debian-ipxe
  credit: https://wiki.debian.org/PXEBootInstall

defaults:

  domain:
    name: "{{ parameter.domainName }}"
    service: essentials
    ipv4: auto

  ethernet:
    name: "{{ parameter.networkName }}"
    subnet: "{{ parameter.networkSubnet }}"

  debianNode:

    information:
      - "connect via the console to install Debian"
      - "you can use the disk sdb for this purpose"

    appliance: 'Ubuntu 14'
    cpu: 4
    memory: 16

    disks:
      - 1 10 standard

    glue:
      - internet icmp 22

    cloud-config:

      write_files:

        - path: /root/grub_40_custom
          content: |
            menuentry 'iPXE by plumbery' {
                set root='hd0,1'
                loopback iso /ipxe.iso
                linux16 (iso)/ipxe.krn
            }

      runcmd:

        - echo "===== Handling ubuntu identity"
        - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
        - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
        - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
        - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

        - echo "===== Downloading iPXE"
        - cd /boot
        - wget -q http://boot.ipxe.org/ipxe.iso

        - echo "===== Updating bootloader"
        - cp -n /etc/grub.d/40_custom /root/etc-grub.d-40_custom.orig
        - cat /root/etc-grub.d-40_custom.orig /root/grub_40_custom >/etc/grub.d/40_custom
        - sed -i "/GRUB_DEFAULT=/s/^.*$/GRUB_DEFAULT='iPXE by plumbery'/" /etc/default/grub
        - update-grub

        - echo "===== Waiting for server to be ready"
        - sleep 3m

      power_state:
        delay: "+1"
        mode: reboot
        message: Booting Debian installer over the network
        timeout: 30
        condition: True

  igniteNode:

    information:
      - "this is the back-end node for Debian installer"
      - "ssh ubuntu@{{ node.public }}"

    appliance: 'Ubuntu 14'
    cpu: 2
    memory: 4

    disks:
      - 1 100 standard

    glue:
      - internet icmp 22

    monitoring: essentials

    cloud-config:

      packages:
        - ntp
        - dtrx
        - dnsmasq
        - atftp

      write_files:

        - path: /root/dnsmasq.sed
          content: |
            #!/usr/bin/sed
            /#dhcp-range=192.168.0.50,192.168.0.150,12h/s/^.*$/dhcp-range={{ parameter.networkRange }},255.255.255.0,12h/
            /#dhcp-boot=pxelinux.0/s/^.*$/dhcp-boot=pxelinux.0/
            s|#enable-tftp|enable-tftp|
            s|#tftp-root=/var/ftpd|tftp-root=/var/tftp|
            s|#dhcp-leasefile=/var/lib/misc/dnsmasq.leases|dhcp-leasefile=/var/lib/misc/dnsmasq.leases|
            s|#dhcp-authoritative|dhcp-authoritative|
            s|#log-queries|log-queries|
            s|#log-dhcp|log-dhcp|
            s|#dhcp-option=3,1.2.3.4|dhcp-option=3,{{ parameter.networkGateway }}|

      runcmd:

        - echo "===== Growing LVM with added disk"
        - pvcreate /dev/sdb
        - vgextend rootvol00 /dev/sdb
        - lvextend -l +100%FREE /dev/mapper/rootvol00-rootlvol00
        - resize2fs /dev/mapper/rootvol00-rootlvol00

        - echo "===== Handling ubuntu identity"
        - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
        - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
        - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
        - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

        - echo "===== Configuring dnsmasq"
        - mkdir -p /var/tftp/
        - sed -i -f /root/dnsmasq.sed /etc/dnsmasq.conf
        - /etc/init.d/dnsmasq restart

        - echo "===== Downloading Debian netboot"
        - cd /root
        - wget -nv http://ftp.nl.debian.org/debian/dists/jessie/main/installer-amd64/current/images/netboot/netboot.tar.gz

        - echo "===== Exposing Debian netboot"
        - dtrx -n netboot.tar.gz
        - cp -rf netboot/* /var/tftp/
        - rm -rf netboot netboot.tar.gz

        - echo "===== Testing tftp transfers"
        - cd /tmp
        - echo 'get pxelinux.0' | atftp localhost
        - ls -l pxelinux.0

  cloud-config:

    ssh_keys:
      rsa_private: |
        {{ rsa_private.key }}
      rsa_public: "{{ rsa_public.key }}"

    users:
      - default

      - name: ubuntu
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

      - name: root
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

    disable_root: true
    ssh_pwauth: false

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - clients:
      nodes:
        - debian01:
            default: debianNode

  - server:
      nodes:
        - ignite:
            default: igniteNode
