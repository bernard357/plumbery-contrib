---

information:
  - "Cassandra ring with 5 nodes"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: EU6

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: CassandraFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: CassandraNetwork

  cpuPerNode:
    information:
      - "the quantity of CPU given to each Cassandra node"
    type: [4..32]
    default: 4

  memoryPerNode:
    information:
      - "the quantity of RAM given to each Cassandra node, in GB"
    type: [8..256]
    default: 12

  diskPerNode:
    information:
      - "the quantity of storage given to each Cassandra node, in GB"
    type: [100..1000]
    default: 100

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/database/cassandra-cluster

defaults:

  domain:
    name: "{{ parameter.domainName }}"
    ipv4: auto

  ethernet:
    name: "{{ parameter.networkName }}"
    subnet: 10.50.0.0

  cassandra-seed:  # these are used to start the cluster

    description: "Cassandra seed node"

    information:
      - "connect remotely:"
      - "ssh ubuntu@{{ node.public }}"
      - "nodetool status"

    appliance: 'Ubuntu 14'

    cpu: "{{ parameter.cpuPerNode }}"
    memory: "{{ parameter.memoryPerNode }}"

    disks:
      - "1 {{ parameter.diskPerNode }} standard"

    glue:
      - internet icmp 22

    monitoring: essentials

    cloud-config:

      runcmd:

        - echo "===== Starting Cassandra service"
        - cassandra -f

        - echo "===== Checking Cassandra"
        - nodetool status


  cassandra-node:  # deploy as much horsepower as needed

    description: "Cassandra node"

    information:
      - "connect remotely:"
      - "ssh ubuntu@{{ node.public }}"
      - "nodetool status"

    appliance: 'Ubuntu 14'

    cpu: "{{ parameter.cpuPerNode }}"
    memory: "{{ parameter.memoryPerNode }}"

    disks:
      - "1 {{ parameter.diskPerNode }} standard"

    glue:
      - internet icmp 22

    monitoring: essentials

    cloud-config:

      runcmd:

        - echo "===== Giving seeds time to start"
        - sleep 3m

        - echo "===== Starting Cassandra service"
        - cassandra -f


  cloud-config:  # apply to all nodes

    hostname: "{{ node.name }}"

    write_files:

      - path: /root/hosts.awk
        content: |
          #!/usr/bin/awk -f
          /^{{ seed1.private }}/ {next}
          /^{{ seed2.private }}/ {next}
          /^{{ node1.private }}/ {next}
          /^{{ node2.private }}/ {next}
          /^{{ node3.private }}/ {next}
          {print}
          END {
           print "{{ seed1.private }}    seed1"
           print "{{ seed2.private }}    seed2"
           print "{{ node1.private }}    node1"
           print "{{ node2.private }}    node2"
           print "{{ node3.private }}    node3"
          }

      - path: /etc/profile.d/cassandra.sh
        permissions: "0755"
        content: |
            export CASSANDRA_INSTALL=/opt/cassandra
            export CASSANDRA_HOME=$CASSANDRA_INSTALL
            export PATH=$PATH:$CASSANDRA_HOME/bin

      - path: /etc/sudoers.d/cassandra_env
        permissions: "0440"
        content: |
            Defaults  env_keep += "CASSANDRA_INSTALL"
            Defaults  env_keep += "CASSANDRA_HOME"

      - path: /root/edit_cassandra_conf.sed
        content: |
          #!/usr/bin/sed
          /cluster_name:/s|cluster_name:.*$|cluster_name: 'CassandraForEver'|
          /seeds:/s|seeds:.*$|seeds: '{{ seed1.private }}, {{ seed2.private }}'|
          /listen_address:/s|listen_address:.*$|listen_address: {{ node.private }}|
          /rpc_address:/s|rpc_address:.*$|rpc_address: {{ node.private }}|

    bootcmd:
      - apt-get remove apache2 -y
      - apt-get autoremove -y

      # automate acceptance of oracle licence
      - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
      - echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 seen true" | sudo debconf-set-selections

    apt_sources:
      - source: "ppa:webupd8team/java"

    packages:
      - ntp
      - oracle-java8-installer
      - oracle-java8-set-default
      - rsync

    runcmd:

      - echo "===== Growing LVM with added disk"
      - pvcreate /dev/sdb
      - vgextend rootvol00 /dev/sdb
      - lvextend -l +100%FREE /dev/mapper/rootvol00-rootlvol00
      - resize2fs /dev/mapper/rootvol00-rootlvol00

      - echo "===== Updating /etc/hosts"
      - cp -n /etc/hosts /etc/hosts.original
      - awk -f /root/hosts.awk /etc/hosts >/etc/hosts.new && mv /etc/hosts.new /etc/hosts
      - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

      - echo "===== Handling ubuntu identity"
      - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
      - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
      - chown ubuntu:ubuntu /home/ubuntu/.ssh/*

      - echo "===== Setting environment variables"
      - . /etc/profile.d/cassandra.sh
      - echo $PATH

      - echo "===== Checking Java"
      - java -version

      - echo "===== Installing Cassandra"
      - cd /tmp/
      - wget -nv http://apache.trisect.eu/cassandra/3.0.8/apache-cassandra-3.0.8-bin.tar.gz
      - tar -xzf apache-cassandra-3.0.8-bin.tar.gz
      - mkdir -p /opt/cassandra
      - mv apache-cassandra-3.0.8/* /opt/cassandra

      - echo "===== Configuring Cassandra"
      - cd /opt/cassandra
      - cp -n conf/cassandra.yaml conf/cassandra.yaml.original
      - sed -i -f /root/edit_cassandra_conf.sed conf/cassandra.yaml
      - mkdir -p logs
      - mkdir -p data/data
      - mkdir -p data/commitlog
      - mkdir -p data/saved_caches
      - mkdir -p data/hints
      - chown -R ubuntu:ubuntu /opt/cassandra


    ssh_keys:
      rsa_private: |
        {{ rsa_private.key }}
      rsa_public: "{{ rsa_public.key }}"

    users:
      - default

      - name: ubuntu
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

    disable_root: false
    ssh_pwauth: false

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - cassandra:

      nodes:

        - seed1:  # Cassandra primary seed

            default: cassandra-seed

            description: "Cassandra primary seed node"

            information:
              - "functional test:"
              - "cqlsh -e 'USE testdb; SELECT * FROM employee WHERE employeeID IN (120, 125);' {{ node.private }}"

            cloud-config:

              write_files:

                - path: /home/ubuntu/test.cql
                  permissions: "0755"
                  content: |
                      CREATE KEYSPACE "testdb" WITH REPLICATION = { 'class' : 'SimpleStrategy' , 'replication_factor' :3 };
                      USE testdb;

                      CREATE TABLE employee (
                        employeeID int,
                        departmentID int,
                        firstName varchar,
                        lastName varchar,
                        PRIMARY KEY (employeeID, departmentID)
                      );

                      INSERT INTO employee (employeeID, departmentID, firstName, lastName)
                      VALUES (120, 10, 'John', 'Green');
                      INSERT INTO employee (employeeID, departmentID, firstName, lastName)
                      VALUES (125, 13, 'Arthur', 'Smith');

                      SELECT * FROM employee WHERE employeeID IN (120, 125);
                      SELECT COUNT(*) FROM employee;

                      CREATE INDEX employee_firstName_idx ON employee(firstName);
                      SELECT * FROM employee WHERE firstName = 'Arthur';

              runcmd:

                - echo "===== Testing Cassandra"
                - "cqlsh -f /home/ubuntu/test.cql {{ node.private }}"

        - seed2:  # Cassandra secondary seed

            default: cassandra-seed

        - node[1..3]:  # regular Cassandra nodes

            default: cassandra-node
