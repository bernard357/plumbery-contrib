---

information:
  - "Cluster of Apache web servers behind the load-balancer integrated in the Managed Cloud Platform"

parameters:

  locationId:
    information:
      - "the target data centre for this deployment"
    type: locations.list
    default: EU8

  domainName:
    information:
      - "the name of the network domain to be deployed"
    type: str
    default: Apache2ClusterFox

  networkName:
    information:
      - "the name of the Ethernet VLAN to be deployed"
    type: str
    default: Apache2ClusterNetwork

links:
  documentation: https://github.com/DimensionDataCBUSydney/plumbery-contrib/tree/master/fittings/web/apache2-cluster

defaults:

  cloud-config:

    ssh_keys:
      rsa_private: |
        {{ rsa_private.key }}
      rsa_public: "{{ rsa_public.key }}"

    users:
      - default

      - name: ubuntu
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

      - name: root
        sudo: 'ALL=(ALL) NOPASSWD:ALL'
        ssh-authorized-keys:
          - "{{ rsa_public.key }}"
          - "{{ rsa_public.local }}"

    disable_root: false
    ssh_pwauth: false

---

locationId: "{{ parameter.locationId }}"

blueprints:

  - web:

      domain:
        name: "{{ parameter.domainName }}"
        ipv4: auto
        service: advanced

      ethernet:
        name: "{{ parameter.networkName }}"
        subnet: 10.0.0.0

      # all nodes of this blueprint are put in the same pool
      #
      pool:

        # you have the choice:
        # - random
        # - round_robin
        # - least_connections
        # - weighted_round_robin
        # - weighted_least_connections
        # - shortest_response
        # - persistent_ip
        #
        algorithm: random

      # how you want to use nodes put in pool
      #
      balancers:

        # balance web traffic from the internet
        # a public IP address is assigned automatically to each listener
        #
        - http:

            information:
              - "http://{{ balancer.ip }}:{{ balancer.port }}"

            protocol: http
            port: 80

        - https:

            information:
              - "https://{{ balancer.ip }}:{{ balancer.port }}"

            protocol: http
            port: 443

        # balance web traffic on a fixed ip address
        #
        - http-fixed:

            information:
              - "http://{{ balancer.ip }}:{{ balancer.port }}"

            protocol: http
            address: 10.1.2.3
            port: 80


      # all these servers will be put in the pool
      #
      nodes:

        # multiple web servers with the same settings
        #
        - web-0[1..9]:

            information:
              - "http://{{ node.public }}"
              - "ssh ubuntu@{{ node.public }}"

            appliance: 'Ubuntu 14'

            # each server is accessible over ssh and http
            #
            glue:
              - internet 22 80

            # each server is monitored in the dashboard
            #
            monitoring: essentials

            # minimum system commands to get a working web server
            #
            cloud-config:

              packages:
                - ntp
                - apache2
                - libapache2-mod-php5

              write_files:

                - path: /var/www/html/index.php
                  content: |
                    <html>
                     <head>
                      <title>Hello World</title>
                     </head>
                     <body>
                     <h1>Hello World from {{ node.name }}</h1>
                        <?php echo '<p>This is a warm welcome from {{ node.name }}</p>'; ?>
                     </body>
                    </html>

              runcmd:

                - echo "===== Handling ubuntu identity"
                - cp -n /etc/ssh/ssh_host_rsa_key /home/ubuntu/.ssh/id_rsa
                - cp -n /etc/ssh/ssh_host_rsa_key.pub /home/ubuntu/.ssh/id_rsa.pub
                - chown ubuntu:ubuntu /home/ubuntu/.ssh/*
                - sed -i "/StrictHostKeyChecking/s/^.*$/    StrictHostKeyChecking no/" /etc/ssh/ssh_config

                - echo "===== Providing PHP web index page"
                - mv /var/www/html/index.html /var/www/html/index.html.deprecated
